#!/bin/bash

set -e

ROOTDIR=/mnt

device=
while getopts d: arg
do
    case $arg in
	d)
	    device="$OPTARG"
	    ;;
	?)
	    printf "Usage: %s: -d device\n" "$0"
            exit 2
	    ;;
    esac
done

if [ -z "$device" ]; then
    printf "Usage: %s: -d device\n" "$0"
    exit 2
fi

# We need some files outside /usr
# /etc/grub.d contains scripts which belongs to /usr/libexec
cp -av ${ROOTDIR}/usr/share/factory/etc/grub.d ${ROOTDIR}/etc/
# Create input variables for grub.cfg
mkdir -p ${ROOTDIR}/etc/default
cp -av ${ROOTDIR}/usr/share/factory/etc/default/grub ${ROOTDIR}/etc/default/grub

# Mount /dev, /sys and /proc to be able to create initrd and
# install bootloader
mount --rbind /dev ${ROOTDIR}/dev
mount --make-rslave ${ROOTDIR}/dev
mount --rbind /sys ${ROOTDIR}/sys
mount --make-rslave ${ROOTDIR}/sys
mount --rbind /proc ${ROOTDIR}/proc
mount --make-rslave ${ROOTDIR}/proc

# Install the kernel
for i in "${ROOTDIR}"/usr/lib/modules/* ; do
    KVER=$(basename "$i")
    for f in .vmlinuz.hmac System.map sysctl.conf vmlinuz; do
        cp -a "${ROOTDIR}/usr/lib/modules/$KVER/$f" "${ROOTDIR}/boot/$f-$KVER"
    done
    chroot ${ROOTDIR} dracut --kver "$KVER" >> /var/log/dracut.log 2>&1
done

# we need /etc/os-release alread now
ln -sf ../usr/lib/os-release ${ROOTDIR}/etc/os-release
sed -i -e 's|GRUB_CMDLINE_LINUX_DEFAULT=.*|GRUB_CMDLINE_LINUX_DEFAULT="rw quiet systemd.show_status=1 mitigations=auto \\$ignition_firstboot systemd.log_level=debug"|g' ${ROOTDIR}/etc/default/grub
echo -e 'SUSE_BTRFS_SNAPSHOT_BOOTING="true"\nGRUB_DISABLE_OS_PROBER="true"' >> ${ROOTDIR}/etc/default/grub
if [ -d /sys/firmware/efi ]; then
	echo 'LOADER_TYPE="grub2-efi"' > ${ROOTDIR}/etc/sysconfig/bootloader
	echo 'SECURE_BOOT="yes"' >> ${ROOTDIR}/etc/sysconfig/bootloader
else
	echo 'LOADER_TYPE="grub2"' > ${ROOTDIR}/etc/sysconfig/bootloader
fi
echo -e "${device}\nactivate" > ${ROOTDIR}/etc/default/grub_installdevice
chroot ${ROOTDIR} pbl --config --install
