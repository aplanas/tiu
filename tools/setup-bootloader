#!/bin/bash

set -e

ROOTDIR=/mnt

device=
while getopts d: arg
do
    case $arg in
	d)
	    device="$OPTARG"
	    ;;
	?)
	    printf "Usage: %s: -d device\n" "$0"
            exit 2
	    ;;
    esac
done

if [ -z "$device" ]; then
    printf "Usage: %s: -d device\n" "$0"
    exit 2
fi

# Install the kernel
for i in "${ROOTDIR}"/usr/lib/modules/* ; do
    KVER=$(basename "$i")
    for f in .vmlinuz.hmac System.map sysctl.conf vmlinuz; do
        cp -a "${ROOTDIR}/usr/lib/modules/$KVER/$f" "${ROOTDIR}/boot/$f-$KVER"
    done
done

# We need some files outside /usr
# /etc/grub.d contains scripts which belongs to /usr/libexec
cp -av ${ROOTDIR}/usr/share/factory/etc/grub.d ${ROOTDIR}/etc/
# Create input variables for grub.cfg
mkdir -p ${ROOTDIR}/etc/default
cp -av ${ROOTDIR}/usr/share/factory/etc/default/grub ${ROOTDIR}/etc/default/grub

# Mount /dev, /sys and /proc to be able to create initrd and
# install bootloader
mount --rbind /dev ${ROOTDIR}/dev
mount --make-rslave ${ROOTDIR}/dev
mount --rbind /sys ${ROOTDIR}/sys
mount --make-rslave ${ROOTDIR}/sys
mount --rbind /proc ${ROOTDIR}/proc
mount --make-rslave ${ROOTDIR}/proc

chroot ${ROOTDIR} dracut > /var/log/dracut.log 2>&1

sed -i -e 's|GRUB_CMDLINE_LINUX_DEFAULT=.*|GRUB_CMDLINE_LINUX_DEFAULT="rw quiet systemd.show_status=1 mitigations=auto \\$ignition_firstboot"|g' ${ROOTDIR}/etc/default/grub
echo -e 'SUSE_BTRFS_SNAPSHOT_BOOTING="true"\nGRUB_DISABLE_OS_PROBER="true"' >> ${ROOTDIR}/etc/default/grub
chroot ${ROOTDIR} sh -c "grub2-mkconfig > /boot/grub2/grub.cfg"
#grub2-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=TIU /dev/vda
chroot ${ROOTDIR} grub2-install "${device}"
